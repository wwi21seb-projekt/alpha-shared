syntax = "proto3";
 
package server_alpha.notification;

option go_package = "github.com/wwi21seb-projekt/alpha-shared/proto/server_alpha/notification";
 
import "server_alpha/common/common.proto";
import "server_alpha/user/user.proto";
 
// ------------------ Messages ------------------ //
 
message PublicKeyResponse{
    string public_key = 1;
}
 
enum PushSubscriptionType{
    WEB = 0;
    EXPO = 1;
}
 
enum NotificationType {
    FOLLOW = 0;
    REPOST = 1;
}
 
message CreatePushSubscriptionRequest{
    string endpoint = 1;
    string p256dh = 2;
    string auth = 3;
    PushSubscriptionType type = 4;
    string token = 5;
    string expiration_time = 6;
 
}
message CreatePushSubscriptionResponse{
    string subscription_id = 1;
}
 
message Notification{
    string notification_id = 1;
    string timestamp = 2;
    NotificationType notfication_type = 3;
    user.User user = 4;
}
 
 
message GetNotificationsResponse{
    repeated Notification notifications = 1;
}
 
 
message DeleteNotificationRequest{
    string notification_id = 1;
}
 
message SendNotificationRequest{
    string notification_type = 1;
    string recipient = 2;
}
 
 
// ------------------ Notification Service ------------------ //
 
service PushService{
    rpc GetPublicKey(common.Empty) returns (PublicKeyResponse);
    rpc CreatePushSubscription(CreatePushSubscriptionRequest) returns (CreatePushSubscriptionResponse);
}
 
 
service NotificationService{
   rpc GetNotifications(common.Empty) returns (GetNotificationsResponse);
   rpc DeleteNotification(DeleteNotificationRequest) returns (common.Empty);
   rpc SendNotification(SendNotificationRequest) returns (common.Empty);
}