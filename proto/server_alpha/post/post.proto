syntax = "proto3";

package server_alpha.post;

option go_package = "github.com/wwi21seb-projekt/alpha-shared/proto/server_alpha/post";

import "server_alpha/common/common.proto";
import "server_alpha/user/user.proto";

// ------------------ Services ------------------ //

service PostService {
  rpc ListPosts(ListPostsRequest) returns (ListPostsResponse);
  rpc GetPost(GetPostRequest) returns (GetPostResponse);
  rpc CreatePost(CreatePostRequest) returns (CreatePostResponse);
  rpc DeletePost(DeletePostRequest) returns (DeletePostResponse);
}

enum FeedType {
  FEED_TYPE_UNSPECIFIED = 0;
  FEED_TYPE_GLOBAL = 1;
  FEED_TYPE_PERSONAL = 2;
  FEED_TYPE_USER = 3;
}

// Domain message types
message Location {
  optional float latitude = 1;
  optional float longitude = 2;
  optional int32 accuracy = 3;
}

message Post {
  string post_id = 1;
  user.User author = 2;
  string creation_date = 3;
  string content = 4;
  uint32 likes = 5;
  bool liked = 6;
  optional Post repost = 7;
  optional Location location = 8;
  optional common.Picture picture = 9;
}

message PostPagination {
  string last_post_id = 1;
  int32 limit = 2;
  int32 records = 3;
}

// ------------ Request messages ------------ //

message CreatePostRequest {
  string content = 1;
  optional Location location = 2;
  optional string picture = 3;
  optional string reposted_post_id = 4;
  optional string base64_picture = 5;
}

message ListPostsRequest {
  optional string hashtag = 1;
  optional string username = 2;
  FeedType feed_type = 3;
  optional PostPagination pagination = 4;
}

message GetPostRequest {
  string post_id = 1;
}

message DeletePostRequest {
  string post_id = 1;
}

// ------------ Response messages ------------ //

message ListPostsResponse {
  repeated Post posts = 1;
  PostPagination pagination = 2;
}

message CreatePostResponse {
  Post post = 1;
}

message GetPostResponse {
  string post_id = 1;
  user.User author = 2;
  string creation_date = 3;

}

message DeletePostResponse {}
